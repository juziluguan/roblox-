local LBLG = Instance.new("ScreenGui")
local LBL = Instance.new("TextLabel")
local player = game.Players.LocalPlayer

-- 修复：确保GUI正确放置
LBLG.Name = "LBLG"
LBLG.Parent = game:GetService("CoreGui")  -- 使用GetService更安全
LBLG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
LBLG.Enabled = true

LBL。Name = "LBL "
LBL。Parent = LBLG
LBL。BackgroundColor3 = Color3.new(1，1，1)
LBL。BackgroundTransparency = 1
LBL。BorderColor3 = Color3.new(0，0，0)
LBL。Position = UDim2.new(0.75，0，0.010，0)
LBL。Size = UDim2.new(0，200，0，30)
LBL。Font = Enum。字体. GothamSemibold
LBL。Text = "加载中..."
LBL。TextColor3 = Color3.new(1，1，1)
LBL。TextScaled = false
LBL。TextSize = 16
LBL。TextWrapped = true
LBL。可见=真

本地FpsLabel = LBL
本地心跳= game:get service(“run service”)。心跳
本地最后一次迭代，开始
本地FrameUpdateTable = {}

本地函数HeartbeatUpdate()
LastIteration = tick()
对于Index = #FrameUpdateTable，1，-1 do
frame update table[Index+1]=(FrameUpdateTable[Index]> = last iteration-1)和frame update table[Index]或nil
结束
frame updatetable[1]= last iteration
local current fps =(tick()-Start > = 1且#FrameUpdateTable)或(# frame updatetable/(tick()-Start))
current fps = math . floor(current fps)
    
    local hour = os.date("%H")
    local minute = os.date("%M")
    local second = os.date("%S")
    
    FpsLabel.Text = ("你好啊: "..hour.."时"..minute.."分"..second.."秒 | FPS: "..CurrentFPS)
end

Start = tick()
Heartbeat:Connect(HeartbeatUpdate)

-- 先测试基础UI是否显示
game:GetService("StarterGui"):SetCore("SendNotification",{ 
    Title = "『910』", 
    Text ="正在加载UI界面...", 
    Duration = 3, 
})

-- 先不加载外部UI库，测试基础功能
wait(1)

-- 创建简单的测试UI来确认问题
local testFrame = Instance.new("Frame")
testFrame.Name = "TestFrame"
testFrame.Parent = LBLG
testFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
testFrame.BorderSizePixel = 0
testFrame.Position = UDim2.new(0.7, 0, 0.05, 0)
testFrame.Size = UDim2.new(0, 250, 0, 200)
testFrame.Visible = true

local testLabel = Instance.new("TextLabel")
testLabel.Name = "TestLabel"
testLabel.Parent = testFrame
testLabel.BackgroundTransparency = 1
testLabel.Size = UDim2.new(1, 0, 1, 0)
testLabel.Text = "测试UI - 如果能看见这个，说明基础UI正常"
testLabel.TextColor3 = Color3.new(1, 1, 1)
testLabel.TextSize = 14
testLabel.TextWrapped = true

-- 检查UI库链接是否有效
game:GetService("StarterGui"):SetCore("SendNotification",{ 
    Title = "『910』", 
    Text ="正在检查UI库链接...", 
    Duration = 2, 
})

-- 尝试加载UI库
local success, ui = pcall(function()
    local response = game:HttpGet("https://raw.githubusercontent.com/THDZEP/Blue-blue-blue/refs/heads/main/hbvc", true)
如果响应和#response > 0，则
        return loadstring(response)()
其他
        error("UI库内容为空")
结束
结束)

如果成功和ui那么
游戏:获取服务(“starter GUI”):设置核心(“发送通知”，{
title = " " 910 "，
        Text ="UI库加载成功，正在创建界面...", 
持续时间= 3，
    })
    
-隐藏测试用户界面
测试框架。可见=假
    
local win = ui:new("910 ")
    
    local UITab1 = win:Tab("『信息』", false)
    
local about = ui tab 1:section("と作者信息ど”，假的)
关于:标签(“910”)
关于:标签("缝合脚本")
关于:标签(" QQ主群：没有即时通信软件副群 没有")
local LBLG = instance . new(" screen GUI ")
本地LBL = Instance.new("TextLabel ")
本地玩家=游戏。玩家。本地玩家
    
-- 修复：确保GUI正确放置
LBLG。Name = "LBLG "
LBLG。parent = game:GetService(" CoreGui ")--使用获取服务更安全
LBLG。ZIndexBehavior = Enum。ZIndexBehavior .同胞
LBLG。启用=真
executor = identifyexecutor()
结束
关于:标签("你的注入器:"..遗嘱执行人)
关于:标签("你的用户名:"..玩家。姓名)
    
本地游戏名= "未知"
本地gameId = "未知"
pcall(函数()
gameName = game:get service(" MarketplaceService "):get product info(game。PlaceId)。名字
gameId = tostring(游戏。GameId)
    end)
    
关于:标签("你现在的服务器名称:"..游戏名)
    about:Label("你现在的服务器id:"..gameId)
关于:标签("你的用户ID:"..玩家。UserId)
    
本地clientId = "未知"
pcall(函数()
clientId = game:get service(" RbxAnalyticsService "):get clientId()
结束)
关于：标签("获取客户端ID:"..clientId)
    
本地用户界面标签2 = win:Tab("と公告』", '7734068321')
本地关于= ui选项卡2:section("と公告ど",真)
关于:标签("感谢所有支持910的人")
关于：标签(“bug有点多见谅")
frame updatetable[1]= last iteration
local current fps =(tick()-Start > = 1且#FrameUpdateTable)或(# frame updatetable/(tick()-Start))
current fps = math . floor(current fps)
关于:标签("十分感谢")
本地小时=操作系统日期(" %H ")
本地分钟= os.date("%M ")
local second = os.date("%S ")
本地常规= ui标签3:section("と通用功能ど",真)
FpsLabel。Text =("你好啊: "..小时.."时"..分钟.."分"..第二.."秒FPS:"..电流脉冲)
结束
结束)
Start = tick()
心跳:连接(心跳更新)
title = "と错误』",
-先测试基础用户界面是否显示
game:get service(" starter GUI "):set core(" send notification " ,{
title = " " 910 "，
结束
